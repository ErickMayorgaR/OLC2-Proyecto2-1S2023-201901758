Terminals unused in grammar

    NLL
    POT
    WHILE
    FOR
    ASIGNAR
    MEDIA
    MEDIANA
    MODA
    ATOI
    ATOF
    IOTA
    BREAK
    CONTINUE
    RETURN


Rules useless in parser due to conflicts

   19 ELSE: %empty


State 94 conflicts: 8 reduce/reduce
State 101 conflicts: 8 reduce/reduce


Grammar

    0 $accept: START END

    1 START: MAIN

    2 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST LLAVC

    3 LIST_INST: LIST_INST INSTRUCTION
    4          | INSTRUCTION

    5 INSTRUCTION: PRINT ';'
    6            | IF
    7            | DECLARATION ';'
    8            | DECLARE_STRUCT
    9            | CREATE_STRUCT

   10 PRINT: PRINTF PARA EXP PARC

   11 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   12   | RIF EXP LLAVA LIST_INST LLAVC
   13   | RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST
   14   | RIF EXP LLAVA LIST_INST LLAVC ELSE

   15 ELSEIF_LIST: ELSEIF_LIST ELSEIF
   16            | ELSEIF

   17 ELSEIF: RELSE RIF EXP LLAVA LIST_INST LLAVC

   18 ELSE: RELSE LLAVA LIST_INST LLAVC
   19     | %empty

   20 DECLARE_STRUCT: STRUCT ID LLAVA DECLARE_LIST LLAVC

   21 DECLARE_LIST: DECLARE_LIST TYPES ID ';'
   22             | TYPES ID ';'

   23 CREATE_STRUCT: STRUCT ID ID '=' LLAVA EXP_LIST LLAVC

   24 EXP_LIST: EXP_LIST ',' EXP
   25         | EXP

   26 DECLARATION: TYPES ID '=' EXP
   27            | TYPES ID

   28 TYPES: INT
   29      | TSTRING
   30      | BOOLEAN
   31      | FLOAT

   32 EXP: EXP SUMA EXP
   33    | EXP MENOS EXP
   34    | EXP POR EXP
   35    | EXP DIV EXP
   36    | EXP MOD EXP
   37    | EXP INC
   38    | INC EXP
   39    | EXP MAYOR EXP
   40    | EXP MAYEQU EXP
   41    | EXP MENOR EXP
   42    | EXP MENEQU EXP
   43    | EXP EQU EXP
   44    | EXP DIFF EXP
   45    | EXP AND EXP
   46    | EXP OR EXP
   47    | NOT EXP
   48    | MENOS EXP
   49    | PARA EXP PARC
   50    | PRIMITIVE

   51 PRIMITIVE: NUMERO
   52          | STRING
   53          | BOOLTRUE
   54          | BOOLFALSE
   55          | LIST_ARR

   56 LIST_ARR: LIST_ARR CORA EXP CORC
   57         | LIST_ARR '.' ID
   58         | ID


Terminals, with rules where they appear

    END (0) 0
    ',' (44) 24
    '.' (46) 57
    ';' (59) 5 7 21 22
    '=' (61) 23 26
    error (256)
    NUMERO <std::string> (258) 51
    ID <std::string> (259) 20 21 22 23 26 27 57 58
    STRING <std::string> (260) 52
    TSTRING <std::string> (261) 29
    FLOAT <std::string> (262) 31
    BOOLEAN <std::string> (263) 30
    STRUCT <std::string> (264) 20 23
    INT <std::string> (265) 28
    BOOLTRUE <std::string> (266) 53
    BOOLFALSE <std::string> (267) 54
    PARA <std::string> (268) 2 10 49
    PARC <std::string> (269) 2 10 49
    LLAVA <std::string> (270) 2 11 12 13 14 17 18 20 23
    LLAVC <std::string> (271) 2 11 12 13 14 17 18 20 23
    CORA <std::string> (272) 56
    CORC <std::string> (273) 56
    VOID <std::string> (274) 2
    RMAIN <std::string> (275) 2
    NLL <std::string> (276)
    SUMA <std::string> (277) 32
    MENOS <std::string> (278) 33 48
    POR <std::string> (279) 34
    DIV <std::string> (280) 35
    POT <std::string> (281)
    INC <std::string> (282) 37 38
    MOD <std::string> (283) 36
    RIF <std::string> (284) 11 12 13 14 17
    RELSE <std::string> (285) 17 18
    WHILE <std::string> (286)
    FOR <std::string> (287)
    PRINTF <std::string> (288) 10
    ASIGNAR <std::string> (289)
    MEDIA <std::string> (290)
    MEDIANA <std::string> (291)
    MODA <std::string> (292)
    ATOI <std::string> (293)
    ATOF <std::string> (294)
    IOTA <std::string> (295)
    BREAK <std::string> (296)
    CONTINUE <std::string> (297)
    RETURN <std::string> (298)
    MAYOR <std::string> (299) 39
    MENOR <std::string> (300) 41
    MAYEQU <std::string> (301) 40
    MENEQU <std::string> (302) 42
    EQU <std::string> (303) 43
    DIFF <std::string> (304) 44
    AND <std::string> (305) 45
    OR <std::string> (306) 46
    NOT <std::string> (307) 47


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    START <func_main*> (58)
        on left: 1
        on right: 0
    MAIN <func_main*> (59)
        on left: 2
        on right: 1
    LIST_INST <list_instruction*> (60)
        on left: 3 4
        on right: 2 3 11 12 13 14 17 18
    INSTRUCTION <instruction*> (61)
        on left: 5 6 7 8 9
        on right: 3 4
    PRINT <instruction*> (62)
        on left: 10
        on right: 5
    IF <instruction*> (63)
        on left: 11 12 13 14
        on right: 6
    ELSEIF_LIST <list_instruction*> (64)
        on left: 15 16
        on right: 11 13 15
    ELSEIF <instruction*> (65)
        on left: 17
        on right: 15 16
    ELSE <list_instruction*> (66)
        on left: 18 19
        on right: 11 14
    DECLARE_STRUCT <instruction*> (67)
        on left: 20
        on right: 8
    DECLARE_LIST <map_struct_dec*> (68)
        on left: 21 22
        on right: 20 21
    CREATE_STRUCT <instruction*> (69)
        on left: 23
        on right: 9
    EXP_LIST <list_expression*> (70)
        on left: 24 25
        on right: 23 24
    DECLARATION <instruction*> (71)
        on left: 26 27
        on right: 7
    TYPES <TipoDato> (72)
        on left: 28 29 30 31
        on right: 21 22 26 27
    EXP <expression*> (73)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 10 11 12 13 14 17 24 25 26 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 56
    PRIMITIVE <expression*> (74)
        on left: 51 52 53 54 55
        on right: 50
    LIST_ARR <expression*> (75)
        on left: 56 57 58
        on right: 55 56 57


State 0

    0 $accept: . START END

    VOID  shift, and go to state 1

    START  go to state 2
    MAIN   go to state 3


State 1

    2 MAIN: VOID . RMAIN PARA PARC LLAVA LIST_INST LLAVC

    RMAIN  shift, and go to state 4


State 2

    0 $accept: START . END

    END  shift, and go to state 5


State 3

    1 START: MAIN .

    $default  reduce using rule 1 (START)


State 4

    2 MAIN: VOID RMAIN . PARA PARC LLAVA LIST_INST LLAVC

    PARA  shift, and go to state 6


State 5

    0 $accept: START END .

    $default  accept


State 6

    2 MAIN: VOID RMAIN PARA . PARC LLAVA LIST_INST LLAVC

    PARC  shift, and go to state 7


State 7

    2 MAIN: VOID RMAIN PARA PARC . LLAVA LIST_INST LLAVC

    LLAVA  shift, and go to state 8


State 8

    2 MAIN: VOID RMAIN PARA PARC LLAVA . LIST_INST LLAVC

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    LIST_INST       go to state 16
    INSTRUCTION     go to state 17
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 9

   29 TYPES: TSTRING .

    $default  reduce using rule 29 (TYPES)


State 10

   31 TYPES: FLOAT .

    $default  reduce using rule 31 (TYPES)


State 11

   30 TYPES: BOOLEAN .

    $default  reduce using rule 30 (TYPES)


State 12

   20 DECLARE_STRUCT: STRUCT . ID LLAVA DECLARE_LIST LLAVC
   23 CREATE_STRUCT: STRUCT . ID ID '=' LLAVA EXP_LIST LLAVC

    ID  shift, and go to state 24


State 13

   28 TYPES: INT .

    $default  reduce using rule 28 (TYPES)


State 14

   11 IF: RIF . EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   12   | RIF . EXP LLAVA LIST_INST LLAVC
   13   | RIF . EXP LLAVA LIST_INST LLAVC ELSEIF_LIST
   14   | RIF . EXP LLAVA LIST_INST LLAVC ELSE

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 34
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 15

   10 PRINT: PRINTF . PARA EXP PARC

    PARA  shift, and go to state 37


State 16

    2 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST . LLAVC
    3 LIST_INST: LIST_INST . INSTRUCTION

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    LLAVC    shift, and go to state 38
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    INSTRUCTION     go to state 39
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 17

    4 LIST_INST: INSTRUCTION .

    $default  reduce using rule 4 (LIST_INST)


State 18

    5 INSTRUCTION: PRINT . ';'

    ';'  shift, and go to state 40


State 19

    6 INSTRUCTION: IF .

    $default  reduce using rule 6 (INSTRUCTION)


State 20

    8 INSTRUCTION: DECLARE_STRUCT .

    $default  reduce using rule 8 (INSTRUCTION)


State 21

    9 INSTRUCTION: CREATE_STRUCT .

    $default  reduce using rule 9 (INSTRUCTION)


State 22

    7 INSTRUCTION: DECLARATION . ';'

    ';'  shift, and go to state 41


State 23

   26 DECLARATION: TYPES . ID '=' EXP
   27            | TYPES . ID

    ID  shift, and go to state 42


State 24

   20 DECLARE_STRUCT: STRUCT ID . LLAVA DECLARE_LIST LLAVC
   23 CREATE_STRUCT: STRUCT ID . ID '=' LLAVA EXP_LIST LLAVC

    ID     shift, and go to state 43
    LLAVA  shift, and go to state 44


State 25

   51 PRIMITIVE: NUMERO .

    $default  reduce using rule 51 (PRIMITIVE)


State 26

   58 LIST_ARR: ID .

    $default  reduce using rule 58 (LIST_ARR)


State 27

   52 PRIMITIVE: STRING .

    $default  reduce using rule 52 (PRIMITIVE)


State 28

   53 PRIMITIVE: BOOLTRUE .

    $default  reduce using rule 53 (PRIMITIVE)


State 29

   54 PRIMITIVE: BOOLFALSE .

    $default  reduce using rule 54 (PRIMITIVE)


State 30

   49 EXP: PARA . EXP PARC

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 45
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 31

   48 EXP: MENOS . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 46
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 32

   38 EXP: INC . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 47
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 33

   47 EXP: NOT . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 48
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 34

   11 IF: RIF EXP . LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   12   | RIF EXP . LLAVA LIST_INST LLAVC
   13   | RIF EXP . LLAVA LIST_INST LLAVC ELSEIF_LIST
   14   | RIF EXP . LLAVA LIST_INST LLAVC ELSE
   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    LLAVA   shift, and go to state 49
    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


State 35

   50 EXP: PRIMITIVE .

    $default  reduce using rule 50 (EXP)


State 36

   55 PRIMITIVE: LIST_ARR .
   56 LIST_ARR: LIST_ARR . CORA EXP CORC
   57         | LIST_ARR . '.' ID

    CORA  shift, and go to state 64
    '.'   shift, and go to state 65

    $default  reduce using rule 55 (PRIMITIVE)


State 37

   10 PRINT: PRINTF PARA . EXP PARC

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 66
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 38

    2 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST LLAVC .

    $default  reduce using rule 2 (MAIN)


State 39

    3 LIST_INST: LIST_INST INSTRUCTION .

    $default  reduce using rule 3 (LIST_INST)


State 40

    5 INSTRUCTION: PRINT ';' .

    $default  reduce using rule 5 (INSTRUCTION)


State 41

    7 INSTRUCTION: DECLARATION ';' .

    $default  reduce using rule 7 (INSTRUCTION)


State 42

   26 DECLARATION: TYPES ID . '=' EXP
   27            | TYPES ID .

    '='  shift, and go to state 67

    $default  reduce using rule 27 (DECLARATION)


State 43

   23 CREATE_STRUCT: STRUCT ID ID . '=' LLAVA EXP_LIST LLAVC

    '='  shift, and go to state 68


State 44

   20 DECLARE_STRUCT: STRUCT ID LLAVA . DECLARE_LIST LLAVC

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    INT      shift, and go to state 13

    DECLARE_LIST  go to state 69
    TYPES         go to state 70


State 45

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP
   49    | PARA EXP . PARC

    PARC    shift, and go to state 71
    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


State 46

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP
   48    | MENOS EXP .

    POR  shift, and go to state 52
    DIV  shift, and go to state 53
    INC  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 48 (EXP)


State 47

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   38    | INC EXP .
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    INC  shift, and go to state 54

    $default  reduce using rule 38 (EXP)


State 48

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP
   47    | NOT EXP .

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61

    $default  reduce using rule 47 (EXP)


State 49

   11 IF: RIF EXP LLAVA . LIST_INST LLAVC ELSEIF_LIST ELSE
   12   | RIF EXP LLAVA . LIST_INST LLAVC
   13   | RIF EXP LLAVA . LIST_INST LLAVC ELSEIF_LIST
   14   | RIF EXP LLAVA . LIST_INST LLAVC ELSE

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    LIST_INST       go to state 72
    INSTRUCTION     go to state 17
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 50

   32 EXP: EXP SUMA . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 73
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 51

   33 EXP: EXP MENOS . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 74
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 52

   34 EXP: EXP POR . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 75
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 53

   35 EXP: EXP DIV . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 76
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 54

   37 EXP: EXP INC .

    $default  reduce using rule 37 (EXP)


State 55

   36 EXP: EXP MOD . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 77
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 56

   39 EXP: EXP MAYOR . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 78
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 57

   41 EXP: EXP MENOR . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 79
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 58

   40 EXP: EXP MAYEQU . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 80
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 59

   42 EXP: EXP MENEQU . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 81
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 60

   43 EXP: EXP EQU . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 82
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 61

   44 EXP: EXP DIFF . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 83
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 62

   45 EXP: EXP AND . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 84
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 63

   46 EXP: EXP OR . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 85
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 64

   56 LIST_ARR: LIST_ARR CORA . EXP CORC

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 86
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 65

   57 LIST_ARR: LIST_ARR '.' . ID

    ID  shift, and go to state 87


State 66

   10 PRINT: PRINTF PARA EXP . PARC
   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    PARC    shift, and go to state 88
    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


State 67

   26 DECLARATION: TYPES ID '=' . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 89
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 68

   23 CREATE_STRUCT: STRUCT ID ID '=' . LLAVA EXP_LIST LLAVC

    LLAVA  shift, and go to state 90


State 69

   20 DECLARE_STRUCT: STRUCT ID LLAVA DECLARE_LIST . LLAVC
   21 DECLARE_LIST: DECLARE_LIST . TYPES ID ';'

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    INT      shift, and go to state 13
    LLAVC    shift, and go to state 91

    TYPES  go to state 92


State 70

   22 DECLARE_LIST: TYPES . ID ';'

    ID  shift, and go to state 93


State 71

   49 EXP: PARA EXP PARC .

    $default  reduce using rule 49 (EXP)


State 72

    3 LIST_INST: LIST_INST . INSTRUCTION
   11 IF: RIF EXP LLAVA LIST_INST . LLAVC ELSEIF_LIST ELSE
   12   | RIF EXP LLAVA LIST_INST . LLAVC
   13   | RIF EXP LLAVA LIST_INST . LLAVC ELSEIF_LIST
   14   | RIF EXP LLAVA LIST_INST . LLAVC ELSE

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    LLAVC    shift, and go to state 94
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    INSTRUCTION     go to state 39
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 73

   32 EXP: EXP . SUMA EXP
   32    | EXP SUMA EXP .
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    POR  shift, and go to state 52
    DIV  shift, and go to state 53
    INC  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 32 (EXP)


State 74

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   33    | EXP MENOS EXP .
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    POR  shift, and go to state 52
    DIV  shift, and go to state 53
    INC  shift, and go to state 54
    MOD  shift, and go to state 55

    $default  reduce using rule 33 (EXP)


State 75

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   34    | EXP POR EXP .
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    INC  shift, and go to state 54

    $default  reduce using rule 34 (EXP)


State 76

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   35    | EXP DIV EXP .
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    INC  shift, and go to state 54

    $default  reduce using rule 35 (EXP)


State 77

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   36    | EXP MOD EXP .
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    INC  shift, and go to state 54

    $default  reduce using rule 36 (EXP)


State 78

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   39    | EXP MAYOR EXP .
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA   shift, and go to state 50
    MENOS  shift, and go to state 51
    POR    shift, and go to state 52
    DIV    shift, and go to state 53
    INC    shift, and go to state 54
    MOD    shift, and go to state 55

    $default  reduce using rule 39 (EXP)


State 79

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   41    | EXP MENOR EXP .
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA   shift, and go to state 50
    MENOS  shift, and go to state 51
    POR    shift, and go to state 52
    DIV    shift, and go to state 53
    INC    shift, and go to state 54
    MOD    shift, and go to state 55

    $default  reduce using rule 41 (EXP)


State 80

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   40    | EXP MAYEQU EXP .
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA   shift, and go to state 50
    MENOS  shift, and go to state 51
    POR    shift, and go to state 52
    DIV    shift, and go to state 53
    INC    shift, and go to state 54
    MOD    shift, and go to state 55

    $default  reduce using rule 40 (EXP)


State 81

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   42    | EXP MENEQU EXP .
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA   shift, and go to state 50
    MENOS  shift, and go to state 51
    POR    shift, and go to state 52
    DIV    shift, and go to state 53
    INC    shift, and go to state 54
    MOD    shift, and go to state 55

    $default  reduce using rule 42 (EXP)


State 82

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   43    | EXP EQU EXP .
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59

    $default  reduce using rule 43 (EXP)


State 83

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   44    | EXP DIFF EXP .
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59

    $default  reduce using rule 44 (EXP)


State 84

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   45    | EXP AND EXP .
   46    | EXP . OR EXP

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61

    $default  reduce using rule 45 (EXP)


State 85

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP
   46    | EXP OR EXP .

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61

    $default  reduce using rule 46 (EXP)


State 86

   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP
   56 LIST_ARR: LIST_ARR CORA EXP . CORC

    CORC    shift, and go to state 95
    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


State 87

   57 LIST_ARR: LIST_ARR '.' ID .

    $default  reduce using rule 57 (LIST_ARR)


State 88

   10 PRINT: PRINTF PARA EXP PARC .

    $default  reduce using rule 10 (PRINT)


State 89

   26 DECLARATION: TYPES ID '=' EXP .
   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 26 (DECLARATION)


State 90

   23 CREATE_STRUCT: STRUCT ID ID '=' LLAVA . EXP_LIST LLAVC

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP_LIST   go to state 96
    EXP        go to state 97
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 91

   20 DECLARE_STRUCT: STRUCT ID LLAVA DECLARE_LIST LLAVC .

    $default  reduce using rule 20 (DECLARE_STRUCT)


State 92

   21 DECLARE_LIST: DECLARE_LIST TYPES . ID ';'

    ID  shift, and go to state 98


State 93

   22 DECLARE_LIST: TYPES ID . ';'

    ';'  shift, and go to state 99


State 94

   11 IF: RIF EXP LLAVA LIST_INST LLAVC . ELSEIF_LIST ELSE
   12   | RIF EXP LLAVA LIST_INST LLAVC .
   13   | RIF EXP LLAVA LIST_INST LLAVC . ELSEIF_LIST
   14   | RIF EXP LLAVA LIST_INST LLAVC . ELSE

    RELSE  shift, and go to state 100

    TSTRING   reduce using rule 12 (IF)
    TSTRING   [reduce using rule 19 (ELSE)]
    FLOAT     reduce using rule 12 (IF)
    FLOAT     [reduce using rule 19 (ELSE)]
    BOOLEAN   reduce using rule 12 (IF)
    BOOLEAN   [reduce using rule 19 (ELSE)]
    STRUCT    reduce using rule 12 (IF)
    STRUCT    [reduce using rule 19 (ELSE)]
    INT       reduce using rule 12 (IF)
    INT       [reduce using rule 19 (ELSE)]
    LLAVC     reduce using rule 12 (IF)
    LLAVC     [reduce using rule 19 (ELSE)]
    RIF       reduce using rule 12 (IF)
    RIF       [reduce using rule 19 (ELSE)]
    PRINTF    reduce using rule 12 (IF)
    PRINTF    [reduce using rule 19 (ELSE)]
    $default  reduce using rule 12 (IF)

    ELSEIF_LIST  go to state 101
    ELSEIF       go to state 102
    ELSE         go to state 103


State 95

   56 LIST_ARR: LIST_ARR CORA EXP CORC .

    $default  reduce using rule 56 (LIST_ARR)


State 96

   23 CREATE_STRUCT: STRUCT ID ID '=' LLAVA EXP_LIST . LLAVC
   24 EXP_LIST: EXP_LIST . ',' EXP

    LLAVC  shift, and go to state 104
    ','    shift, and go to state 105


State 97

   25 EXP_LIST: EXP .
   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 25 (EXP_LIST)


State 98

   21 DECLARE_LIST: DECLARE_LIST TYPES ID . ';'

    ';'  shift, and go to state 106


State 99

   22 DECLARE_LIST: TYPES ID ';' .

    $default  reduce using rule 22 (DECLARE_LIST)


State 100

   17 ELSEIF: RELSE . RIF EXP LLAVA LIST_INST LLAVC
   18 ELSE: RELSE . LLAVA LIST_INST LLAVC

    LLAVA  shift, and go to state 107
    RIF    shift, and go to state 108


State 101

   11 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST . ELSE
   13   | RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST .
   15 ELSEIF_LIST: ELSEIF_LIST . ELSEIF

    RELSE  shift, and go to state 100

    TSTRING   reduce using rule 13 (IF)
    TSTRING   [reduce using rule 19 (ELSE)]
    FLOAT     reduce using rule 13 (IF)
    FLOAT     [reduce using rule 19 (ELSE)]
    BOOLEAN   reduce using rule 13 (IF)
    BOOLEAN   [reduce using rule 19 (ELSE)]
    STRUCT    reduce using rule 13 (IF)
    STRUCT    [reduce using rule 19 (ELSE)]
    INT       reduce using rule 13 (IF)
    INT       [reduce using rule 19 (ELSE)]
    LLAVC     reduce using rule 13 (IF)
    LLAVC     [reduce using rule 19 (ELSE)]
    RIF       reduce using rule 13 (IF)
    RIF       [reduce using rule 19 (ELSE)]
    PRINTF    reduce using rule 13 (IF)
    PRINTF    [reduce using rule 19 (ELSE)]
    $default  reduce using rule 13 (IF)

    ELSEIF  go to state 109
    ELSE    go to state 110


State 102

   16 ELSEIF_LIST: ELSEIF .

    $default  reduce using rule 16 (ELSEIF_LIST)


State 103

   14 IF: RIF EXP LLAVA LIST_INST LLAVC ELSE .

    $default  reduce using rule 14 (IF)


State 104

   23 CREATE_STRUCT: STRUCT ID ID '=' LLAVA EXP_LIST LLAVC .

    $default  reduce using rule 23 (CREATE_STRUCT)


State 105

   24 EXP_LIST: EXP_LIST ',' . EXP

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 111
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 106

   21 DECLARE_LIST: DECLARE_LIST TYPES ID ';' .

    $default  reduce using rule 21 (DECLARE_LIST)


State 107

   18 ELSE: RELSE LLAVA . LIST_INST LLAVC

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    LIST_INST       go to state 112
    INSTRUCTION     go to state 17
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 108

   17 ELSEIF: RELSE RIF . EXP LLAVA LIST_INST LLAVC

    NUMERO     shift, and go to state 25
    ID         shift, and go to state 26
    STRING     shift, and go to state 27
    BOOLTRUE   shift, and go to state 28
    BOOLFALSE  shift, and go to state 29
    PARA       shift, and go to state 30
    MENOS      shift, and go to state 31
    INC        shift, and go to state 32
    NOT        shift, and go to state 33

    EXP        go to state 113
    PRIMITIVE  go to state 35
    LIST_ARR   go to state 36


State 109

   15 ELSEIF_LIST: ELSEIF_LIST ELSEIF .

    $default  reduce using rule 15 (ELSEIF_LIST)


State 110

   11 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE .

    $default  reduce using rule 11 (IF)


State 111

   24 EXP_LIST: EXP_LIST ',' EXP .
   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 24 (EXP_LIST)


State 112

    3 LIST_INST: LIST_INST . INSTRUCTION
   18 ELSE: RELSE LLAVA LIST_INST . LLAVC

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    LLAVC    shift, and go to state 114
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    INSTRUCTION     go to state 39
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 113

   17 ELSEIF: RELSE RIF EXP . LLAVA LIST_INST LLAVC
   32 EXP: EXP . SUMA EXP
   33    | EXP . MENOS EXP
   34    | EXP . POR EXP
   35    | EXP . DIV EXP
   36    | EXP . MOD EXP
   37    | EXP . INC
   39    | EXP . MAYOR EXP
   40    | EXP . MAYEQU EXP
   41    | EXP . MENOR EXP
   42    | EXP . MENEQU EXP
   43    | EXP . EQU EXP
   44    | EXP . DIFF EXP
   45    | EXP . AND EXP
   46    | EXP . OR EXP

    LLAVA   shift, and go to state 115
    SUMA    shift, and go to state 50
    MENOS   shift, and go to state 51
    POR     shift, and go to state 52
    DIV     shift, and go to state 53
    INC     shift, and go to state 54
    MOD     shift, and go to state 55
    MAYOR   shift, and go to state 56
    MENOR   shift, and go to state 57
    MAYEQU  shift, and go to state 58
    MENEQU  shift, and go to state 59
    EQU     shift, and go to state 60
    DIFF    shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


State 114

   18 ELSE: RELSE LLAVA LIST_INST LLAVC .

    $default  reduce using rule 18 (ELSE)


State 115

   17 ELSEIF: RELSE RIF EXP LLAVA . LIST_INST LLAVC

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    LIST_INST       go to state 116
    INSTRUCTION     go to state 17
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 116

    3 LIST_INST: LIST_INST . INSTRUCTION
   17 ELSEIF: RELSE RIF EXP LLAVA LIST_INST . LLAVC

    TSTRING  shift, and go to state 9
    FLOAT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    STRUCT   shift, and go to state 12
    INT      shift, and go to state 13
    LLAVC    shift, and go to state 117
    RIF      shift, and go to state 14
    PRINTF   shift, and go to state 15

    INSTRUCTION     go to state 39
    PRINT           go to state 18
    IF              go to state 19
    DECLARE_STRUCT  go to state 20
    CREATE_STRUCT   go to state 21
    DECLARATION     go to state 22
    TYPES           go to state 23


State 117

   17 ELSEIF: RELSE RIF EXP LLAVA LIST_INST LLAVC .

    $default  reduce using rule 17 (ELSEIF)
